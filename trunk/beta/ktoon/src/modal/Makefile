#############################################################################
# Makefile for building: libmodal.a
# Generated by qmake (1.07a) (Qt 3.3.3) on: Mon Apr 25 20:41:35 2005
# Project:  modal.pro
# Template: lib
# Command: $(QMAKE) -o Makefile modal.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I../../src/core -I../../src/images -I../../src/tools -I../../src/timeline -I../../src/store -I../../src/scenes -I../../src/properties -I../../src/modal -I../../src/library -I../../src/gl -I../../src/exposure -I../../src/drawqt -I../../src/color -I../../src/cameras -I../../src/brushes -I../../ming -I../../src/swf -I/usr/include/qt3
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = about.h \
		export.h \
		import.h \
		preferences.h \
		properties.h \
		splash.h
SOURCES = about.cpp \
		export.cpp \
		import.cpp \
		preferences.cpp \
		properties.cpp \
		splash.cpp
OBJECTS = about.o \
		export.o \
		import.o \
		preferences.o \
		properties.o \
		splash.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_about.cpp \
		moc_export.cpp \
		moc_import.cpp \
		moc_preferences.cpp \
		moc_properties.cpp \
		moc_splash.cpp
OBJMOC = moc_about.o \
		moc_export.o \
		moc_import.o \
		moc_preferences.o \
		moc_properties.o \
		moc_splash.o
DIST	   = modal.pro
QMAKE_TARGET = modal
DESTDIR  = 
TARGET   = libmodal.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: modal.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile modal.pro
qmake: 
	@$(QMAKE) -o Makefile modal.pro

dist: 
	@mkdir -p .tmp/modal && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/modal/ && ( cd `dirname .tmp/modal` && $(TAR) modal.tar modal && $(GZIP) modal.tar ) && $(MOVE) `dirname .tmp/modal`/modal.tar.gz . && $(DEL_FILE) -r .tmp/modal

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

about.o: about.cpp about.h

export.o: export.cpp export.h

import.o: import.cpp import.h

preferences.o: preferences.cpp preferences.h

properties.o: properties.cpp properties.h

splash.o: splash.cpp splash.h \
		../images/images.h

moc_about.o: moc_about.cpp  about.h 

moc_export.o: moc_export.cpp  export.h 

moc_import.o: moc_import.cpp  import.h 

moc_preferences.o: moc_preferences.cpp  preferences.h 

moc_properties.o: moc_properties.cpp  properties.h 

moc_splash.o: moc_splash.cpp  splash.h 

moc_about.cpp: $(MOC) about.h
	$(MOC) about.h -o moc_about.cpp

moc_export.cpp: $(MOC) export.h
	$(MOC) export.h -o moc_export.cpp

moc_import.cpp: $(MOC) import.h
	$(MOC) import.h -o moc_import.cpp

moc_preferences.cpp: $(MOC) preferences.h
	$(MOC) preferences.h -o moc_preferences.cpp

moc_properties.cpp: $(MOC) properties.h
	$(MOC) properties.h -o moc_properties.cpp

moc_splash.cpp: $(MOC) splash.h
	$(MOC) splash.h -o moc_splash.cpp

####### Install

install:  

uninstall:  

