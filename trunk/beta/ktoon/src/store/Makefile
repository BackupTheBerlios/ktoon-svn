#############################################################################
# Makefile for building: libstore.a
# Generated by qmake (1.07a) (Qt 3.3.3) on: Mon Apr 25 20:41:36 2005
# Project:  store.pro
# Template: lib
# Command: $(QMAKE) -o Makefile store.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = animation.h \
		brush.h \
		camera.h \
		color.h \
		document.h \
		folder.h \
		gldrawing.h \
		item.h \
		keyframe.h \
		layer.h \
		librarydata.h \
		palette.h \
		point3d.h \
		scene.h \
		soundclip.h \
		soundlayer.h \
		status.h \
		symbol.h
SOURCES = animation.cpp \
		brush.cpp \
		camera.cpp \
		color.cpp \
		document.cpp \
		folder.cpp \
		gldrawing.cpp \
		item.cpp \
		keyframe.cpp \
		layer.cpp \
		librarydata.cpp \
		palette.cpp \
		point3d.cpp \
		scene.cpp \
		soundclip.cpp \
		soundlayer.cpp \
		status.cpp \
		symbol.cpp
OBJECTS = animation.o \
		brush.o \
		camera.o \
		color.o \
		document.o \
		folder.o \
		gldrawing.o \
		item.o \
		keyframe.o \
		layer.o \
		librarydata.o \
		palette.o \
		point3d.o \
		scene.o \
		soundclip.o \
		soundlayer.o \
		status.o \
		symbol.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = store.pro
QMAKE_TARGET = store
DESTDIR  = 
TARGET   = libstore.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: store.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile store.pro
qmake: 
	@$(QMAKE) -o Makefile store.pro

dist: 
	@mkdir -p .tmp/store && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/store/ && ( cd `dirname .tmp/store` && $(TAR) store.tar store && $(GZIP) store.tar ) && $(MOVE) `dirname .tmp/store`/store.tar.gz . && $(DEL_FILE) -r .tmp/store

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

animation.o: animation.cpp animation.h \
		scene.h \
		layer.h \
		keyframe.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

brush.o: brush.cpp brush.h

camera.o: camera.cpp camera.h \
		point3d.h

color.o: color.cpp color.h

document.o: document.cpp document.h \
		palette.h \
		brush.h \
		librarydata.h \
		animation.h \
		color.h \
		scene.h \
		layer.h \
		keyframe.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

folder.o: folder.cpp folder.h \
		item.h

gldrawing.o: gldrawing.cpp gldrawing.h \
		../gl/glline.h \
		../gl/glellipse.h \
		../gl/glrectangle.h \
		../gl/glpen.h \
		../gl/glpencil.h \
		../gl/glbrush.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

item.o: item.cpp item.h

keyframe.o: keyframe.cpp keyframe.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

layer.o: layer.cpp layer.h \
		keyframe.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

librarydata.o: librarydata.cpp item.h \
		librarydata.h

palette.o: palette.cpp palette.h \
		color.h

point3d.o: point3d.cpp point3d.h

scene.o: scene.cpp scene.h \
		layer.h \
		keyframe.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

soundclip.o: soundclip.cpp soundclip.h

soundlayer.o: soundlayer.cpp soundlayer.h \
		layer.h \
		soundclip.h \
		keyframe.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../gl/glgraphiccomponent.h \
		../store/color.h \
		../store/brush.h

status.o: status.cpp status.h \
		brush.h \
		color.h \
		scene.h \
		layer.h \
		keyframe.h \
		soundclip.h \
		../gl/glgraphiccomponent.h \
		camera.h \
		gldrawing.h \
		point3d.h \
		../store/color.h \
		../store/brush.h

symbol.o: symbol.cpp symbol.h \
		../gl/glgraphiccomponent.h \
		item.h \
		../store/color.h \
		../store/brush.h

####### Install

install:  

uninstall:  

