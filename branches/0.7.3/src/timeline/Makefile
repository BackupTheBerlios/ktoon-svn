#############################################################################
# Makefile for building: libtimeline.a
# Generated by qmake (1.07a) (Qt 3.3.3) on: Tue Apr 26 11:11:34 2005
# Project:  timeline.pro
# Template: lib
# Command: $(QMAKE) -o Makefile timeline.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I../../src/core -I../../src/images -I../../src/tools -I../../src/timeline -I../../src/swf -I../../src/store -I../../src/scenes -I../../src/properties -I../../src/modal -I../../src/library -I../../src/gl -I../../src/exposure -I../../src/drawqt -I../../src/color -I../../src/cameras -I../../src/brushes -I/usr/include/qt3
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = soundwidget.h \
		timeline.h \
		tlframe.h \
		tlframesequence.h \
		tlframesequencelayout.h \
		tlframesequencemanager.h \
		tllayer.h \
		tllayermanager.h \
		tllayersequence.h \
		tlruler.h
SOURCES = soundwidget.cpp \
		timeline.cpp \
		tlframe.cpp \
		tlframesequence.cpp \
		tlframesequencelayout.cpp \
		tlframesequencemanager.cpp \
		tllayer.cpp \
		tllayermanager.cpp \
		tllayersequence.cpp \
		tlruler.cpp
OBJECTS = soundwidget.o \
		timeline.o \
		tlframe.o \
		tlframesequence.o \
		tlframesequencelayout.o \
		tlframesequencemanager.o \
		tllayer.o \
		tllayermanager.o \
		tllayersequence.o \
		tlruler.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_soundwidget.cpp \
		moc_timeline.cpp \
		moc_tlframe.cpp \
		moc_tlframesequence.cpp \
		moc_tlframesequencelayout.cpp \
		moc_tlframesequencemanager.cpp \
		moc_tllayer.cpp \
		moc_tllayermanager.cpp \
		moc_tllayersequence.cpp \
		moc_tlruler.cpp
OBJMOC = moc_soundwidget.o \
		moc_timeline.o \
		moc_tlframe.o \
		moc_tlframesequence.o \
		moc_tlframesequencelayout.o \
		moc_tlframesequencemanager.o \
		moc_tllayer.o \
		moc_tllayermanager.o \
		moc_tllayersequence.o \
		moc_tlruler.o
DIST	   = timeline.pro
QMAKE_TARGET = timeline
DESTDIR  = 
TARGET   = libtimeline.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: timeline.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile timeline.pro
qmake: 
	@$(QMAKE) -o Makefile timeline.pro

dist: 
	@mkdir -p .tmp/timeline && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/timeline/ && ( cd `dirname .tmp/timeline` && $(TAR) timeline.tar timeline && $(GZIP) timeline.tar ) && $(MOVE) `dirname .tmp/timeline`/timeline.tar.gz . && $(DEL_FILE) -r .tmp/timeline

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

soundwidget.o: soundwidget.cpp soundwidget.h \
		tlframesequence.h \
		tlframe.h

timeline.o: timeline.cpp timeline.h \
		tllayermanager.h \
		soundwidget.h \
		tllayersequence.h \
		tllayer.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

tlframe.o: tlframe.cpp tlframe.h

tlframesequence.o: tlframesequence.cpp tlframesequence.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequencemanager.h \
		tlframe.h

tlframesequencelayout.o: tlframesequencelayout.cpp tlframesequencelayout.h \
		tllayer.h \
		tlframesequence.h \
		tlframe.h \
		tlframesequencemanager.h \
		tlruler.h

tlframesequencemanager.o: tlframesequencemanager.cpp tlframesequencemanager.h \
		../images/images.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

tllayer.o: tllayer.cpp tllayer.h \
		tllayersequence.h \
		tllayermanager.h \
		../images/images.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

tllayermanager.o: tllayermanager.cpp tllayermanager.h \
		../images/images.h \
		tllayersequence.h \
		tllayer.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

tllayersequence.o: tllayersequence.cpp tllayersequence.h \
		tllayer.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

tlruler.o: tlruler.cpp tlruler.h

moc_soundwidget.o: moc_soundwidget.cpp  soundwidget.h 

moc_timeline.o: moc_timeline.cpp  timeline.h tllayermanager.h \
		soundwidget.h \
		tllayersequence.h \
		tllayer.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

moc_tlframe.o: moc_tlframe.cpp  tlframe.h 

moc_tlframesequence.o: moc_tlframesequence.cpp  tlframesequence.h tlframe.h

moc_tlframesequencelayout.o: moc_tlframesequencelayout.cpp  tlframesequencelayout.h tlframesequence.h \
		tlframe.h

moc_tlframesequencemanager.o: moc_tlframesequencemanager.cpp  tlframesequencemanager.h tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

moc_tllayer.o: moc_tllayer.cpp  tllayer.h tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

moc_tllayermanager.o: moc_tllayermanager.cpp  tllayermanager.h tllayersequence.h \
		tllayer.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

moc_tllayersequence.o: moc_tllayersequence.cpp  tllayersequence.h tllayer.h \
		tlframesequencemanager.h \
		tlframesequencelayout.h \
		tlruler.h \
		tlframesequence.h \
		tlframe.h

moc_tlruler.o: moc_tlruler.cpp  tlruler.h 

moc_soundwidget.cpp: $(MOC) soundwidget.h
	$(MOC) soundwidget.h -o moc_soundwidget.cpp

moc_timeline.cpp: $(MOC) timeline.h
	$(MOC) timeline.h -o moc_timeline.cpp

moc_tlframe.cpp: $(MOC) tlframe.h
	$(MOC) tlframe.h -o moc_tlframe.cpp

moc_tlframesequence.cpp: $(MOC) tlframesequence.h
	$(MOC) tlframesequence.h -o moc_tlframesequence.cpp

moc_tlframesequencelayout.cpp: $(MOC) tlframesequencelayout.h
	$(MOC) tlframesequencelayout.h -o moc_tlframesequencelayout.cpp

moc_tlframesequencemanager.cpp: $(MOC) tlframesequencemanager.h
	$(MOC) tlframesequencemanager.h -o moc_tlframesequencemanager.cpp

moc_tllayer.cpp: $(MOC) tllayer.h
	$(MOC) tllayer.h -o moc_tllayer.cpp

moc_tllayermanager.cpp: $(MOC) tllayermanager.h
	$(MOC) tllayermanager.h -o moc_tllayermanager.cpp

moc_tllayersequence.cpp: $(MOC) tllayersequence.h
	$(MOC) tllayersequence.h -o moc_tllayersequence.cpp

moc_tlruler.cpp: $(MOC) tlruler.h
	$(MOC) tlruler.h -o moc_tlruler.cpp

####### Install

install:  

uninstall:  

