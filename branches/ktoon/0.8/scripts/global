#!/bin/bash

APPNAME="KToon"
APPVER="0.8.0"

function findQMake
{
	for p in $*
	do
		qmake=`which $p 2>/dev/null`
		if [ -x $qmake ]
		then
			version=`$qmake -query QT_VERSION 2>/dev/null | grep -o "\\w" `
			count=0
			for v in $version
			do
				if [ $count -eq 0 ]
				then
					if [ $v -eq "4" ]
					then
						echo $qmake
						return 0
					else
						break
					fi
				fi
				
				let count=$count+1
			done
		fi
	done
}


KT_CONFIG=ktconfig.pri

EMAIL='ktoon@toonka.com'

MAKE=`which make`
QMAKE=$(findQMake qmake-qt4 qmake4 qmake)

LOG_FILE=build.log

export PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin


# Look & feel

GREEN='\033[1;32m'
RED='\033[9;31m'
YELLOW='\033[1;33m'
NULLC='\033[0;0m'

function qpinfo ()
{
	echo -e $GREEN '*' $NULLC $1
	echo $1 >> $LOG_FILE
}

function qpwarn ()
{
	echo -e $YELLOW '*' $NULLC $1
	echo $1 >> $LOG_FILE
}

function qperror ()
{
	echo -e $RED '*' $NULLC $1
	echo $1 >> $LOG_FILE
}

function qpelec ()
{
	echo -en "$YELLOW * $NULLC $1 "
}

function detectQtVersion()
{
	COUNT=0
	VERSION_STR=`$QMAKE -query QT_VERSION | grep -o "\\w"`
	for version in $VERSION_STR
	do
		VERSION[$COUNT]=$version
		COUNT=${COUNT+1}
	done

	if [ "${VERSION[0]}" == "U" ]
	then
		qperror "You're using Qt 3"
		VERSION[1]=0
	fi
	
	if [ "${VERSION[0]}" != "4" -a ${VERSION[1]} -lt 1 ]
	then
		qperror "Please install Qt >= 4.1 or set QTDIR to Qt4 installation path"
		exit -1
	else
		qpinfo "Using Qt: `$QMAKE -query QT_VERSION `"
	fi
}





